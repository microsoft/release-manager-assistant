# Azure DevOps Pipeline for Release Manager Assistant
# Run when commits are pushed to mainline branch (main or master)
trigger:
  - main

# Also run on pull requests to main
pr:
  - main

pool:
  vmImage: ubuntu-latest

variables:
  # Set these variables in your pipeline settings
  - name: AZURE_SUBSCRIPTION_ID
    value: $(azureSubscriptionId)
  - name: AZURE_ENV_NAME
    value: $(azureEnvironmentName)
  - name: AZURE_LOCATION
    value: $(azureLocation)

stages:
  - stage: Validate
    displayName: 'Validate Infrastructure'
    jobs:
      - job: ValidateBicep
        displayName: 'Validate Bicep Templates'
        steps:
          - task: setup-azd@0
            displayName: 'Install Azure Developer CLI'

          - task: AzureCLI@2
            displayName: 'Validate Bicep Templates'
            inputs:
              azureSubscription: azconnection
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                # Validate main Bicep template
                az deployment sub validate \
                  --location $(AZURE_LOCATION) \
                  --template-file ./infra/main.bicep \
                  --parameters environmentName=$(AZURE_ENV_NAME) location=$(AZURE_LOCATION)

  - stage: Deploy
    displayName: 'Deploy to Azure'
    dependsOn: Validate
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    jobs:
      - deployment: DeployInfrastructure
        displayName: 'Deploy Infrastructure and Application'
        environment: $(AZURE_ENV_NAME)
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self

                - task: setup-azd@0
                  displayName: 'Install Azure Developer CLI'

                - pwsh: |
                    azd config set auth.useAzCliAuth "true"
                  displayName: 'Configure AZD Authentication'

                - task: AzureCLI@2
                  displayName: 'Provision Infrastructure'
                  inputs:
                    azureSubscription: azconnection
                    scriptType: bash
                    scriptLocation: inlineScript
                    inlineScript: |
                      azd provision --no-prompt
                  env:
                    AZURE_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)
                    AZURE_ENV_NAME: $(AZURE_ENV_NAME)
                    AZURE_LOCATION: $(AZURE_LOCATION)

                - task: AzureCLI@2
                  displayName: 'Deploy Application'
                  inputs:
                    azureSubscription: azconnection
                    scriptType: bash
                    scriptLocation: inlineScript
                    inlineScript: |
                      azd deploy --no-prompt
                  env:
                    AZURE_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)
                    AZURE_ENV_NAME: $(AZURE_ENV_NAME)
                    AZURE_LOCATION: $(AZURE_LOCATION)

                - task: AzureCLI@2
                  displayName: 'Get Deployment Outputs'
                  inputs:
                    azureSubscription: azconnection
                    scriptType: bash
                    scriptLocation: inlineScript
                    inlineScript: |
                      echo "Deployment completed successfully!"
                      echo "Getting service endpoints..."
                      azd show --output json > deployment-output.json
                      cat deployment-output.json